<?php

gatekeeper();

$questionsbankpost = get_input('questionsbankpost');
$questionsbank = get_entity($questionsbankpost);

if ($questionsbank->getSubtype() == "questionsbank" && $questionsbank->canEdit()) {

    $user_guid = elgg_get_logged_in_user_guid();

    $input_question = get_input('question');
    $input_question_html = get_input('question_html');
    $input_question_explanation = get_input('question_explanation', '', false);
    $input_question_type = get_input('question_type');
    switch ($input_question_type) {
        case 'urls_files':
            $question_urls = get_input('question_urls');
            $question_urls = array_map('trim', $question_urls);
            $question_urls_names = get_input('question_urls_names');
            $question_urls_names = array_map('trim', $question_urls_names);
            $i = 0;
            $input_question_urls = "";
            if ((count($question_urls) > 0) && (strcmp($question_urls[0], "") != 0)) {
                foreach ($question_urls as $url) {
                    if ($i != 0)
                        $input_question_urls .= Chr(26);
                    $input_question_urls .= $question_urls_names[$i] . Chr(24) . $question_urls[$i];
                    $i = $i + 1;
                }
            }
            $number_question_urls = count($question_urls);
            break;
    }
    $file_counter = count($_FILES['upload']['name']);
    $input_response_type = get_input('response_type');
    
    switch ($input_response_type) {
        case 'radiobutton':
        case 'checkbox':
            $responses = get_input('responses');
            $responses = array_map('trim', $responses);
            $input_responses = implode(Chr(26), $responses);
            $number_responses = count($responses);    
            break;  
        case 'grid':
            $responses_rows = get_input('responses_rows');
            $responses_rows = array_map('trim', $responses_rows);
            $input_responses_rows = implode(Chr(26), $responses_rows);
            $number_responses_rows = count($responses_rows);
            $responses_columns = get_input('responses_columns');
            $responses_columns = array_map('trim', $responses_columns);
            $input_responses_columns = implode(Chr(26), $responses_columns);
            $number_responses_columns = count($responses_columns);
            break;
        case 'pairs':
            $responses_left = get_input('responses_left');
            $responses_left = array_map('trim', $responses_left);
            $input_responses_left = implode(Chr(26),$responses_left);
            $number_responses_left = count($responses_left);
            $responses_right = get_input('responses_right');
            $responses_right = array_map('trim', $responses_right);
            $input_responses_right = implode(Chr(26),$responses_right);
            $number_responses_right = count($responses_right);
            break;
    }

    switch ($input_response_type) {
        case 'radiobutton':
            $input_number_correct_response = get_input('number_correct_response');
            break;
        case 'checkbox':
            $input_numbers_correct_responses = get_input('numbers_correct_responses');
            if (!empty($input_numbers_correct_responses)) {
                $numbers_correct_responses = explode(',', $input_numbers_correct_responses);
                $numbers_correct_responses = array_map('trim', $numbers_correct_responses);
                $number_correct_responses = count($numbers_correct_responses);
            } else {
                $number_correct_responses = 0;
            }
            break;
        case 'grid':
            $input_numbers_correct_responses=get_input('grid_correct_responses');
            if (!empty($input_numbers_correct_responses)){
               $numbers_correct_responses = explode(',',$input_numbers_correct_responses);
               $numbers_correct_responses = array_map('trim', $numbers_correct_responses);
               $number_correct_responses = count($numbers_correct_responses);
            } else {
               $number_correct_responses = 0;
            }
            break;
        case 'pairs':
            $input_numbers_correct_responses=get_input('pairs_correct_responses');
            if (!empty($input_numbers_correct_responses)){
               $numbers_correct_responses = explode(',',$input_numbers_correct_responses);
               $numbers_correct_responses = array_map('trim', $numbers_correct_responses);
               $number_correct_responses = count($numbers_correct_responses);
            } else {
               $number_correct_responses = 0;
            }
            break;
    }

    $input_question_tags = get_input('question_tags');
    //Convert string of tags into a preformatted array
    $questiontagsarray = string_to_tag_array($input_question_tags);

    $options = array('relationship' => 'questionsbank_question', 'relationship_guid' => $questionsbankpost, 'inverse_relationship' => false, 'type' => 'object', 'subtype' => 'questionsbank_question', 'limit' => 0);
    $questions = elgg_get_entities_from_relationship($options);
    if (empty($questions)) {
        $index = 0;
    } else {
        $index = count($questions);
    }

    // Cache to the session
    elgg_make_sticky_form('add_question_questionsbank');

    // Make sure the question isn't blank
    if (strcmp($input_question, "") == 0) {
        register_error(elgg_echo("questionsbank:question_blank"));
        forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
    }

    // Question urls
    if (strcmp($input_question_type, "urls_files") == 0) {
        $blank_question_url = false;
        $questionurlsarray = array();
        $i = 0;
        foreach ($question_urls as $one_url) {
            $questionurlsarray[$i] = $one_url;
            if (strcmp($one_url, "") == 0) {
                $blank_question_url = true;
                break;
            }
            $i = $i + 1;
        }
        if (!$blank_question_url) {
            foreach ($question_urls_names as $one_url_name) {
                if (strcmp($one_url_name, "") == 0) {
                    $blank_question_url = true;
                    break;
                }
            }
        }
        if (($blank_question_url) && ($number_question_urls > 1)) {
            register_error(elgg_echo("questionsbank:url_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        $same_question_url = false;
        $i = 0;
        while (($i < $number_question_urls) && (!$same_question_url)) {
            $j = $i + 1;
            while ($j < $number_question_urls) {
                if (strcmp($questionurlsarray[$i], $questionurlsarray[$j]) == 0) {
                    $same_question_url = true;
                    break;
                }
                $j = $j + 1;
            }
            $i = $i + 1;
        }
        if ($same_question_url) {
            register_error(elgg_echo("questionsbank:url_repetition"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        if (!$question_url_blank) {
            foreach ($question_urls as $url) {
                $xss_questionsbank = "<a rel=\"nofollow\" href=\"$url\" target=\"_blank\">$url</a>";
                if ($xss_questionsbank != filter_tags($xss_questionsbank)) {
                    register_error(elgg_echo('questionsbank:url_failed'));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
            }
        }
    }

    // Responses
    if ((strcmp($input_response_type, "radiobutton") == 0) || (strcmp($input_response_type, "checkbox") == 0)) {
        $blank_response = false;
        $responsesarray = array();
        $i = 0;
        foreach ($responses as $one_response) {
            $responsesarray[$i] = $one_response;
            if (strcmp($one_response, "") == 0) {
                $blank_response = true;
                break;
            }
            $i = $i + 1;
        }
        if ($blank_response) {
            register_error(elgg_echo("questionsbank:response_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        $same_response = false;
        $i = 0;
        while (($i < $number_responses) && (!$same_response)) {
            $j = $i + 1;
            while ($j < $number_responses) {
                if (strcmp($responsesarray[$i], $responsesarray[$j]) == 0) {
                    $same_response = true;
                    break;
                }
                $j = $j + 1;
            }
            $i = $i + 1;
        }
        if ($same_response) {
            register_error(elgg_echo("questionsbank:response_repetition"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        if ($number_responses < 2) {
            register_error(elgg_echo("questionsbank:response_only_one_option"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
    }

    if (strcmp($input_response_type,"grid")==0){
        $blank_response=false;
        $responsesrowsarray=array();
        $i=0;
        foreach($responses_rows as $one_response){
            $responsesrowsarray[$i]=$one_response;
            if (strcmp($one_response,"")==0){
                $blank_response=true;
                break;
            }
            $i=$i+1;
        }            
        if ($blank_response){
            register_error(elgg_echo("questionsbank:row_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        $same_response=false;
        $i=0;
        while(($i<$number_responses_rows)&&(!$same_response)){
            $j=$i+1;
            while($j<$number_responses_rows){
                if (strcmp($responsesrowsarray[$i],$responsesrowsarray[$j])==0){
                    $same_response=true;
                    break;
                }   
                $j=$j+1;
            }
            $i=$i+1;
        }
        if ($same_response){
            register_error(elgg_echo("questionsbank:row_repetition"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }

        $blank_response=false;
        $responsescolumnsarray=array();
        $i=0;
        foreach($responses_columns as $one_response){
            $responsescolumnsarray[$i]=$one_response;
            if (strcmp($one_response,"")==0){
                $blank_response=true;
                break;
            }
            $i=$i+1;
        }            
        if ($blank_response){
            register_error(elgg_echo("questionsbank:column_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        
        $same_response=false;
        $i=0;
        while(($i<$number_responses_columns)&&(!$same_response)){
            $j=$i+1;
            while($j<$number_responses_columns){
                if (strcmp($responsescolumnsarray[$i],$responsescolumnsarray[$j])==0){
                    $same_response=true;
                    break;
                }
                $j=$j+1;
            }
            $i=$i+1;
        }
        if ($same_response){
            register_error(elgg_echo("questionsbank:column_repetition"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
        if ($number_responses_columns<2){
            register_error(elgg_echo("questionsbank:column_only_one_option"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        } 
    }

    if (strcmp($input_response_type,"pairs")==0){
        $blank_response=false;
        $responsesleftarray=array();
        $i=0;
        foreach($responses_left as $one_response){
            $responsesleftarray[$i]=$one_response;
            if (strcmp($one_response,"")==0){
                $blank_response=true;
                break;
            }
            $i=$i+1;
        }            
        if ($blank_response){
            register_error(elgg_echo("questionsbank:left_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }

        $blank_response=false;
        $responsesrightarray=array();
        $i=0;
        foreach($responses_right as $one_response){
            $responsesrightarray[$i]=$one_response;
            if (strcmp($one_response,"")==0){
                $blank_response=true;
                break;
            }
            $i=$i+1;
        }            
        if ($blank_response){
            register_error(elgg_echo("questionsbank:right_blank"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }

        if($number_responses_left != $number_responses_right){
            register_error(elgg_echo("questionsbank:not_same_numbers_left_right"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }

        if ($number_responses_right<2){
            register_error(elgg_echo("questionsbank:only_one_pair"));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        } 
    }

    // Correct responses
    switch ($input_response_type) {
        case 'radiobutton':
            $is_integer = true;
            $mask_integer = '^([[:digit:]]+)$';
            if (ereg($mask_integer, $input_number_correct_response, $same)) {
                if ((substr($same[1], 0, 1) == 0) && (strlen($same[1]) != 1)) {
                    $is_integer = false;
                }
            } else {
                $is_integer = false;
            }
            if (!$is_integer) {
                register_error(elgg_echo("questionsbank:bad_number_correct_response"));
                forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
            }
            if ($input_number_correct_response > $number_responses) {
                register_error(elgg_echo("questionsbank:bad_number_correct_response"));
                forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
            }
            $input_correct_responses = "";
            $i = 1;
            foreach ($responses as $one_response) {
                if ($i == $input_number_correct_response) {
                    $input_correct_responses .= $one_response;
                    break;
                }
                $i = $i + 1;
            }
            break;
        case 'checkbox':
            foreach ($numbers_correct_responses as $one_number) {
                $is_integer = true;
                $mask_integer = '^([[:digit:]]+)$';
                if (ereg($mask_integer, $one_number, $same)) {
                    if ((substr($same[1], 0, 1) == 0) && (strlen($same[1]) != 1)) {
                        $is_integer = false;
                    }
                } else {
                    $is_integer = false;
                }
                if (!$is_integer) {
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
                if ($one_number > $number_responses) {
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
            }
            $input_correct_responses = "";
            if ($number_correct_responses > 0) {
                $i = 0;
                $j = 0;
                foreach ($responses as $one_response) {
                    if (in_array($i + 1, $numbers_correct_responses)) {
                        if ($j == 0) {
                            $input_correct_responses .= $one_response;
                        } else {
                            $input_correct_responses .= Chr(26) . $one_response;
                        }
                        $j = $j + 1;
                    }
                    $i = $i + 1;
                }
            } else {
                $input_correct_responses = "not_correct_responses";
            }    
            break;
        case 'grid':
            foreach($numbers_correct_responses as $one_number){
                $is_integer = true;
                $mask_integer='^([[:digit:]]+)$'; 
                if (ereg($mask_integer,$one_number,$same)){
                    if ((substr($same[1],0,1)==0)&&(strlen($same[1])!=1)){
                        $is_integer=false;
                    }
                } else {
                    $is_integer=false;
                }   
                if (!$is_integer){
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
                if ($one_number>$number_responses_columns){
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
            }
            $input_correct_responses = "";
            if ($number_correct_responses==$number_responses_rows){

                $j=0;
                foreach ($numbers_correct_responses as $one_number){
                    $i=1;
                    foreach ($responses_columns as $one_response){
                        if ($i==$one_number){
                            if ($j==0) {
                                $input_correct_responses .= $one_response;
                            } else { 
                                $input_correct_responses .= Chr(26) . $one_response;
                            }
                            $j=$j+1;
                            break;
                        }  
                        $i=$i+1;
                    }
                }
            } else {
                register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
            }
            break;
        case 'pairs':
	    $input_correct_responses = "";
	    $array_input_correct_responses = array();
            $array_one_number = array();
            foreach ($numbers_correct_responses as $one_number){
                $array_one_number = explode('-', $one_number);
                $is_integer = true;
                $mask_integer='^([[:digit:]]+)$'; 
                if (ereg($mask_integer,$array_one_number[0],$same_left)&&ereg($mask_integer,$array_one_number[1],$same_right)){
                    if ((substr($same_left[1],0,1)==0)&&(strlen($same_left[1])!=1)||(substr($same_right[1],0,1)==0)&&(strlen($same_right[1])!=1)){
                        $is_integer=false;
                    }
                } else {
                    $is_integer=false;
                }   
                if (!$is_integer){
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
                if ($array_one_number[0]>$number_responses_right||$array_one_number[1]>$number_responses_right){
                    register_error(elgg_echo("questionsbank:bad_number_correct_responses"));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
           
                $j=1;
	        foreach ($responses_left as $one_response_left) {
                    if ($j==$array_one_number[0]) {
                        $new_input_correct_response = $one_response_left;
		        break;			
		    }
		    $j=$j+1;
	        }
	      	$k=1;
	        foreach ($responses_right as $one_response_right) {
                    if ($k==$array_one_number[1]) {
                        $new_input_correct_response .= Chr(26) . $one_response_right;
		        break;			
		    }
		    $k=$k+1;
	        }
	        if (!in_array($new_input_correct_response,$array_input_correct_responses)){
	            $array_input_correct_responses[] = $new_input_correct_response;
	        }

		$i=0;
		foreach ($array_input_correct_responses as $one_input_correct_response) {
		    if ($i==0) {
		        $input_correct_responses = $one_input_correct_response;
		    } else {
		        $input_correct_responses .= Chr(27) . $one_input_correct_response;    
		    }
		}
            }   
            break;
    }

    // Before we can set metadata, we need to save the questionsbank post
    if (!$questionsbank->save()) {
        register_error(elgg_echo("questionsbank:error_save"));
        forward("questionsbank/edit/$questionsbankpost");
    }

    if ((strcmp($input_question_type, "urls_files") == 0) && ($_FILES['upload']['name'][0] == "") && ($number_question_urls == 0)) {
        register_error(elgg_echo('questionsbank:not_question_urls_files'));
        forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
    }

    if (($file_counter > 0) && ($_FILES['upload']['name'][0] != "")) {
        $file_save_well = true;
        $file = array();
        for ($i = 0; $i < $file_counter; $i++) {
            $file[$i] = new QuestionsQuestionsbankPluginFile();
            $file[$i]->subtype = "questionsbank_question_file";
            $prefix = "file/";
            $filestorename = elgg_strtolower(time() . $_FILES['upload']['name'][$i]);
            $file[$i]->setFilename($prefix . $filestorename);
            $file[$i]->setMimeType($_FILES['upload']['type'][$i]);
            $file[$i]->originalfilename = $_FILES['upload']['name'][$i];
            $file[$i]->simpletype = elgg_get_file_simple_type($_FILES['upload']['type'][$i]);
            $file[$i]->open("write");
            if (isset($_FILES['upload']) && isset($_FILES['upload']['error'][$i])) {
                $uploaded_file = file_get_contents($_FILES['upload']['tmp_name'][$i]);
            } else {
                $uploaded_file = false;
            }
            $file[$i]->write($uploaded_file);
            $file[$i]->close();
            $file[$i]->title = $_FILES['upload']['name'][$i];
            $file[$i]->owner_guid = $user_guid;
            $file[$i]->container_guid = $questionsbank->container_guid;
            $file[$i]->access_id = $questionsbank->access_id;
            $file_save = $file[$i]->save();
            if (!$file_save) {
                $file_save_well = false;
                break;
            }
        }
        if (!$file_save_well) {
            foreach ($file as $one_file) {
                $deleted = $one_file->delete();
                if (!$deleted) {
                    register_error(elgg_echo('questionsbank:filenotdeleted'));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
            }
            register_error(elgg_echo('questionsbank:file_error_save'));
            forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
        }
    }


//////////////////////////////////////////////////////////////////////

    //Create new question
    $question = new ElggObject();
    $question->subtype = "questionsbank_question";
    $question->owner_guid = $user_guid;
    $question->container_guid = $questionsbank->container_guid;
    $question->access_id = $questionsbank->access_id;
    if (!$question->save()) {
        if (($file_counter > 0) && ($_FILES['upload']['name'][0] != "")) {
            foreach ($file as $one_file) {
                $deleted = $one_file->delete();
                if (!$deleted) {
                    register_error(elgg_echo('questionsbank:filenotdeleted'));
                    forward("questionsbank/add_question/$questionsbankpost/$input_question_type");
                }
            }
        }


        register_error(elgg_echo('questionsbank:question_error_save'));
        forward("questionsbank/edit/$questionsbankpost");
    }
    $question->question = $input_question;
    $question->question_html = $input_question_html;
    $question->question_explanation = $input_question_explanation;
    $question->question_type = $input_question_type;
    switch ($input_question_type) {
        case 'urls_files':
            $question->question_urls = $input_question_urls;
            break;
    }
    if (($file_counter > 0) && ($_FILES['upload']['name'][0] != "")) {
        for ($i = 0; $i < $file_counter; $i++) {
            add_entity_relationship($question->getGUID(), 'question_file_link', $file[$i]->getGUID());
        }
    }
    $question->response_type = $input_response_type;
    switch ($input_response_type) {
        case 'radiobutton':
        case 'checkbox':
            $question->responses = $input_responses;
            break;
        case 'grid':
            $question->responses_rows = $input_responses_rows;
            $question->responses_columns = $input_responses_columns;
            break;
        case 'pairs':
            $question->responses_left = $input_responses_left;
            $question->responses_right = $input_responses_right;
            break;
    }

    switch ($input_response_type) {
        case 'radiobutton':
        case 'checkbox':
            $question->correct_responses = $input_correct_responses;
            break;
        case 'grid':
            $question->correct_responses = $input_correct_responses;
            break;
        case 'pairs':
            $question->correct_responses = $input_correct_responses;
            break;
    }

    if (is_array($questiontagsarray)) {
        $question->tags = $questiontagsarray;
    }
    $question->index = $index;
    add_entity_relationship($questionsbank->getGUID(), 'questionsbank_question', $question->getGUID());

    // Remove the questionsbank post cache
    elgg_clear_sticky_form('add_question_questionsbank');

    // System message
    system_message(elgg_echo("questionsbank:updated"));

    // Add to river
    //add_to_river('river/object/questionsbank/update','update',$user_guid,$questionsbankpost);

    // Forward	
    forward("questionsbank/view/$questionsbankpost");
}

?>
